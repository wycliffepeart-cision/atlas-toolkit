name: Build, push & release
on:
  push:
    branches:
      - main

env:
  TAG_NAME: r${{ github.run_number }}
  DIST_BRANCH: dist
  GH_USERNAME: ${{ github.repository_owner}}
  CI_COMMIT_AUTHOR: Continuous Integration
  EVERGREEN_TAG_NAME: next
  OWNER: cision

jobs:
  # snyk-scan:
  #   if: github.repository_owner == ${{env.OWNER}}
  #   uses: Cision-DevOps/github-workflows-shared/.github/workflows/snyk-node-v1.yaml@main
  #   secrets:
  #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # verify-code-style:
  #   uses: ./.github/workflows/verify-code-style.yml
    # secrets:
    #   SSH_REPO_ACCESS: ${{ secrets.SSH_REPO_ACCESS }}

  build-and-generate-tag:
    runs-on: ubuntu-20.04 # TODO: [self-hosted, Linux, X64, gcp, small]
    env:
      CI_COMMIT_MESSAGE: Continuous Integration Build release

    # needs: [verify-code-style] # [snyk-scan, verify-code-style]

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: v19.7.0
      # - uses: webfactory/ssh-agent@v0.7.0
      #   with:
      #     ssh-private-key: ${{ secrets.SSH_REPO_ACCESS }}

      - name: Generate Build
        run: |
          echo "Inastall dependencies"
          npm install
          echo "npm run build:dist"
          pwd
          ls
          npm -v
          cd src
          ls
          cd src/button
          ls
          cd ../..
          npm run build:dist
          echo "npm run build:types"
          npm run build:types

      - name: Config Git
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "${{ env.GH_USERNAME }}@users.noreply.github.com"

      - name: Manage Worktree
        run: |
          git worktree add --no-checkout --detach ./package
          cp package.json ./package
          cp -R .github ./package
          cp -R dist/ ./package

      - name: Commit and push
        run: |
          cd package/
          git switch -c ${{ env.DIST_BRANCH }}
          git add .github/
          git add dist/
          git add package.json
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
          git tag -a ${{ env.TAG_NAME }} -m "${{env.TAG_NAME}} by ${{ github.actor }} from ${{ github.head_ref }}"
          git push origin ${{ env.TAG_NAME }}

      - name: Worktree cleanup
        run: git worktree remove -f ./package

  release-tag:
    runs-on: ubuntu-latest # TODO: [self-hosted, Linux, X64, gcp, small]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    needs: [build-and-generate-tag]
    steps:
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release for tag ${{ env.TAG_NAME }}
          prerelease: true
          body: ${{ needs.generate-changelog.outputs.changelog }}

  generate-moving-tag:
    uses: ./.github/workflows/generate-moving-tag.yml
    needs: [build-and-generate-tag, release-tag]
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    with:
      tag_name: next
      release_name: r${{ github.run_number }}
